// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using src.Web.Api.Infrastructure.EntityFramework;

namespace ResistenceSocialNetwork.Migrations
{
    [DbContext(typeof(ResistenceDbContext))]
    [Migration("20210920211247_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Inventory", b =>
                {
                    b.Property<long>("IdInventory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdRebel")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdInventory");

                    b.HasIndex("IdRebel");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Location", b =>
                {
                    b.Property<long>("IdLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("GalaxyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("IdRebel")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdLocation");

                    b.HasIndex("IdRebel")
                        .IsUnique();

                    b.ToTable("location");
                });

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Rebel", b =>
                {
                    b.Property<long>("IdRebel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ReportTraitor")
                        .HasColumnType("int");

                    b.Property<bool>("Traitor")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdRebel");

                    b.ToTable("rebel");
                });

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Inventory", b =>
                {
                    b.HasOne("src.Web.Api.Infrastructure.EntityFramework.Entity.Rebel", "Rebel")
                        .WithMany("Inventories")
                        .HasForeignKey("IdRebel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rebel");
                });

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Location", b =>
                {
                    b.HasOne("src.Web.Api.Infrastructure.EntityFramework.Entity.Rebel", "Rebel")
                        .WithOne("Location")
                        .HasForeignKey("src.Web.Api.Infrastructure.EntityFramework.Entity.Location", "IdRebel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rebel");
                });

            modelBuilder.Entity("src.Web.Api.Infrastructure.EntityFramework.Entity.Rebel", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
